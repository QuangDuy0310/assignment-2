import pytest
from selenium import webdriver
from selenium.webdriver.chrome.webdriver import WebDriver
from selenium.webdriver.common.by import By
import time
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
import random 


@pytest.fixture
def driver():
    driver = webdriver.Chrome()
    driver.maximize_window()
    yield driver
    driver.quit() 

def test_upd_profile_fullname(driver):
    driver.get("http://localhost:5000/")
    wait = WebDriverWait(driver, 10)
    time.sleep(5)
    login_link = driver.find_element(By.LINK_TEXT, "Log In") #t√¨m ki·∫øm link Login b·∫±ng text
    login_link.click()
    
    time.sleep(3)
    
    username_field = driver.find_element(By.ID, "usrname").send_keys("admin")
    password_field = driver.find_element(By.ID, "password").send_keys("12345")
    
    login_button = driver.find_element(By.XPATH, "//button[@type='submit' and text()='Login']")
    login_button.click()
    
    account_link = driver.find_element(By.CSS_SELECTOR, "li > a[href='/user-edit-account']") 
    account_link.click()
    time.sleep(3)
    
    fullname_field = driver.find_element(By.ID, "fullname")
    fullname_field.clear()  # Clear existing text
    fullname_field.send_keys("tuan")
    
    continue_button = driver.find_element(By.XPATH, "//button[@type='submit' and text()='Continue']")
    continue_button.click()
    time.sleep(2)

    try:
        success_alert = wait.until(EC.visibility_of_element_located((By.CSS_SELECTOR, ".alert.alert-danger")))
        assert "Updated Successfully" in success_alert.text, "Success message not found after updating profile."
        # If the URL is correct, the test passes
        wait.until(EC.url_to_be("http://localhost:5000/user-edit-account"))
        
    except TimeoutException:
        # If not redirected to the cart page, fail the test
        assert False, "Failed to update"

def test_review_product(driver: webdriver.Chrome):
    driver.get("http://127.0.0.1:5000/")

    # ƒêƒÉng nh·∫≠p
    driver.find_element(By.XPATH, "//a[@href='/user-login']").click()
    driver.find_element(By.ID, "usrname").send_keys("admin")
    driver.find_element(By.ID, "password").send_keys("12345")
    driver.find_element(By.ID, "login btn").click()  # S·ª≠a l·∫°i ID n·∫øu c·∫ßn thi·∫øt
    time.sleep(5)
    driver.find_element(By.XPATH, "//a[@href='/product-list']").click()
    time.sleep(3)

    # Danh s√°ch c√°c XPATH c·ªßa c√°c s·∫£n ph·∫©m
    products_xpath = [
        "//a[@href='/item-detail?product-id=1']",
        "//a[@href='/item-detail?product-id=2']",
        "//a[@href='/item-detail?product-id=7']",
        "//a[@href='/item-detail?product-id=8']",
        "//a[@href='/item-detail?product-id=9']",
        "//a[@href='/item-detail?product-id=3']"
    ]

# Ch·ªçn ng·∫´u nhi√™n m·ªôt s·∫£n ph·∫©m
    selected_product_xpath = random.choice(products_xpath)
    time.sleep(5)
    driver.find_element(By.XPATH, selected_product_xpath).click()
    time.sleep(5)
    # T√¨m ph·∫ßn t·ª≠ Reviews v√† nh·∫•n v√†o n√≥
    reviews_link = driver.find_element(By.XPATH, "//a[@href='#Reviews' and @data-toggle='tab']")
    reviews_link.click()  # Nh·∫•n v√†o li√™n k·∫øt Reviews

    time.sleep(5)  # ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ trang t·∫£i l·∫°i (n·∫øu c·∫ßn)
    # T√¨m tr∆∞·ªùng input c√≥ id="name" v√† nh·∫≠p th√¥ng tin v√†o
    name_input = driver.find_element(By.ID, "name")
    name_input.send_keys("duy")  # Thay "T√™n c·ªßa b·∫°n" b·∫±ng th√¥ng tin mu·ªën nh·∫≠p

    time.sleep(5)  # ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ xem k·∫øt qu·∫£ nh·∫≠p
    # T√¨m tr∆∞·ªùng input c√≥ id="email" v√† nh·∫≠p th√¥ng tin v√†o
    email_input = driver.find_element(By.ID, "email")
    email_input.send_keys("duy@gmail.com")  # Thay "T√™n c·ªßa b·∫°n" b·∫±ng th√¥ng tin mu·ªën nh·∫≠p

    time.sleep(5)  # ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ xem k·∫øt qu·∫£ nh·∫≠p
    # T√¨m tr∆∞·ªùng input c√≥ id="email" v√† nh·∫≠p th√¥ng tin v√†o
    review_input = driver.find_element(By.ID, "review")
    review_input.send_keys("s·∫£n ph·∫©m t·ªët")  # Thay "T√™n c·ªßa b·∫°n" b·∫±ng th√¥ng tin mu·ªën nh·∫≠p

    time.sleep(5)  # ƒê·ª£i m·ªôt ch√∫t ƒë·ªÉ xem k·∫øt qu·∫£ nh·∫≠p
# Wait for the button to be clickable
    button = driver.find_element(By.XPATH, "//button[@type='submit' and text(üôÅ'Send']")
    button.click()
    time.sleep(5)

# Ki·ªÉm tra xem n·ªôi dung c·ªßa trang c√≥ ch·ª©a th√¥ng b√°o l·ªói kh√¥ng
    page_source = driver.page_source

# N·∫øu c√≥ th√¥ng b√°o l·ªói "Internal Server Error", test case s·∫Ω th·∫•t b·∫°i
    if "Internal Server Error" in page_source:
      pytest.fail("Test failed. Internal Server Error encountered.")
    else:
    # N·∫øu kh√¥ng c√≥ th√¥ng b√°o l·ªói, in ra th√¥ng b√°o pass
      print("Test passed. No internal server error.") 

